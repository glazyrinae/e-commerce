"""
Django settings for ecommerce project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os, dj_database_url
from pathlib import Path
from environs import Env

env = Env()
env.read_env()  # читает .env файл

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DEBUG")

ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS").split(" ")
INTERNAL_IPS = [
    '127.0.0.1',
]

# Принудительно включить для всех IP (небезопасно, только для разработки!)
DEBUG_TOOLBAR_CONFIG = {
    "SHOW_TOOLBAR_CALLBACK": lambda request: True
}

# Application definition

INSTALLED_APPS = [
    'account.apps.AccountConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'products.apps.ProductsConfig',
    'settings.apps.SettingsConfig',
    'basket.apps.BasketConfig',
    'debug_toolbar',
]

MIDDLEWARE = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'ecommerce.core.middleware.AnonymousRequiredMiddleware',
]

ROOT_URLCONF = 'ecommerce.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
                'settings.context_processors.site_settings',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecommerce.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     "ENGINE": os.getenv("SQL_ENGINE", "django.db.backends.sqlite3"),
    #     "NAME": os.getenv("POSTGRES_DB", "ecommerce"),
    #     "USER": os.getenv("POSTGRES_USER", "user"),
    #     "PASSWORD": os.getenv("POSTGRES_PASSWORD", "password"),
    #     "HOST": os.getenv("SQL_HOST", "localhost"),
    #     "PORT": os.getenv("SQL_PORT", "5432"),
    # }
    'default': dj_database_url.parse(
        os.getenv('DATABASE_URL'),
        engine='django.db.backends.postgresql',
        # conn_max_age=600,
        # conn_health_checks=True,
        # ssl_require=not DEBUG
    )
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

LOGIN_REDIRECT_URL = 'list_items'
LOGIN_URL = 'login'
LOGOUT_URL = 'logout'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = env.str("EMAIL_HOST")
EMAIL_PORT = env.int("EMAIL_PORT")
EMAIL_USE_TLS = env.bool("EMAIL_USE_TLS")
EMAIL_HOST_USER = env.str("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = env.str("EMAIL_HOST_PASSWORD")
DEFAULT_FROM_EMAIL = env.str("DEFAULT_FROM_EMAIL")



# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
    
#     # Форматтеры (как будут выглядеть записи)
#     'formatters': {
#         'verbose': {
#             'format': '{levelname} {asctime} {module} {message}',
#             'style': '{',
#         },
#         'simple': {
#             'format': '{levelname} {message}',
#             'style': '{',
#         },
#     },
    
#     # Обработчики (куда пишем логи)
#     'handlers': {

#         # 'db': {
#         #     'class': 'django_db_logger.db_log_handler.DatabaseLogHandler'
#         # },

#         # Консольный вывод
#         'console': {
#             'class': 'logging.StreamHandler',
#             'formatter': 'simple',
#         },
        
#         # Файловый обработчик для приложения "products_file"
#         'products_file': {
#             'class': 'logging.FileHandler',
#             'filename': './logs/products_file.log',  # путь к файлу
#             # 'maxBytes': 5 * 1024 * 1024,  # 5 МБ
#             # 'backupCount': 3,  # хранить 3 файла (shop.log, shop.log.1, ...)
#             'formatter': 'verbose',
#         },
        
#         # Файловый обработчик для приложения "account_file"
#         'account_file': {
#             'class': 'logging.FileHandler',
#             'filename': './logs/account_file.log',
#             # 'maxBytes': 5 * 1024 * 1024,  # 5 МБ
#             # 'backupCount': 3,  # хранить 3 файла (shop.log, shop.log.1, ...)
#             'formatter': 'verbose',
#         },
        
#         # Можно добавить обработчик для ошибок
#         'error_file': {
#             'class': 'logging.FileHandler',
#             'filename': './logs/errors.log',
#             # 'maxBytes': 5 * 1024 * 1024,  # 5 МБ
#             # 'backupCount': 3,  # хранить 3 файла (shop.log, shop.log.1, ...)
#             'level': 'ERROR',  # только ERROR и выше
#             'formatter': 'verbose',
#         },
#     },
    
#     # Настройки логгеров для каждого приложения
#     'loggers': {
#         'django': {
#             'handlers': ['console'],
#             'level': 'INFO',
#         },
        
#         'django.db.backends': {
#             'handlers': ['console'],
#             'level': 'DEBUG',
#         },

#         # Логи приложения "products" (пишем в консоль + файл)
#         'products': {
#             'handlers': ['console', 'products_file'],
#             'level': 'DEBUG',
#             'propagate': False,  # не дублировать в родительских логгерах
#         },
        
#         # Логи приложения "account" (только в файл)
#         'account': {
#             'handlers': ['console', 'account_file'],
#             'level': 'INFO',
#             'propagate': False,
#         },
        
#         # Логи ошибок (все ошибки Django и приложений)
#         'django.request': {
#             'handlers': ['error_file'],
#             'level': 'ERROR',
#             'propagate': False,
#         },
#     },
# }

DEBUG_TOOLBAR_PANELS = [
    'debug_toolbar.panels.history.HistoryPanel',
    'debug_toolbar.panels.versions.VersionsPanel',
    'debug_toolbar.panels.timer.TimerPanel',
    'debug_toolbar.panels.settings.SettingsPanel',
    'debug_toolbar.panels.headers.HeadersPanel',
    'debug_toolbar.panels.request.RequestPanel',
    'debug_toolbar.panels.sql.SQLPanel',
    'debug_toolbar.panels.staticfiles.StaticFilesPanel',
    'debug_toolbar.panels.templates.TemplatesPanel',
    'debug_toolbar.panels.cache.CachePanel',
    'debug_toolbar.panels.signals.SignalsPanel',
    'debug_toolbar.panels.logging.LoggingPanel',
    'debug_toolbar.panels.redirects.RedirectsPanel',
]